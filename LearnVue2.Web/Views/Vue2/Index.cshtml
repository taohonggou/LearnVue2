
@{
    ViewBag.Title = "Index";
}

<div id="app">
    <h2>Index</h2>

    <div>
        <span>
            我会变化： {{msg}}
        </span>
        <p v-once>
            不会变化：{{testOnce}}
        </p>
    </div>

    <div v-html="rawHtml">

    </div>

    <div>
        <label class="label label-danger">标签</label>
        <label v-bind:class="labelClass">标签</label>
        <button v-bind:disabled="isButtonDisabled" class="btn btn-primary">按钮</button>
    </div>

    <div>
        <label class="label" v-bind:class="isReView==1?'label-danger':'label-primary'" v-bind:id="'label'+labelId">标签</label>
        <p>{{computers.split(',').join('+')}}</p>
        <p v-once>
            {{new Date()}}
        </p>
    </div>
    <div>
        <a v-bind:href="url">my is a</a>
        <button v-on:click="doSomeThing" class="btn btn-primary">按钮</button>
    </div>
    <form v-on:submit.prevent="onSubmit">
        <input type="text" name="name" value="" />
        <input type="submit"  value="提交" />
    </form>

    <!--过滤器-->
    <div>
        <p>
            {{value|capitalize|addChar}}
        </p>
    </div>
    <div>
        <label v-bind:class="labelClass">标签</label>
        <label :class="labelClass">标签</label>
    </div>
    <div>
        <button v-on:click="doSomeThing">按钮</button>
        <button @@click="doSomeThing">按钮</button>
    </div>
    <div>
        <p>computed:{{addNumber}}</p>
    </div>

    <component-test></component-test>

    <div>
        <ol>
            <todo-item-param v-for="item in groceryList"
                             v-bind:todo="item"
                             v-bind:key="item.id">
            </todo-item-param>
        </ol>
    </div>
</div>


<script type="text/javascript">
    var Child = {
        template: '<div>A custom component!</div>'
    }

    Vue.component('todo-item', {
        template: '<li>这是个待办项</li>',
    });

    Vue.component('todo-item-param', {
        props: ['todo'],
        template: '<li>{{todo.text}}</li>'
    });

    Vue.component('component-test', {
        template: '<div><button v-on:click="clickTimes+=1">click me：{{clickTimes}}</button></div>',
        data: function () {
            return {
                clickTimes: 1,
            };
        }
    });

    Vue.component('page', {
        props: ['pageList','totalCount'],
        template:'',
    });

    var vm = new Vue({
        el: '#app',
        data: {
            value:'abc',
            url:'http://www.baidu.com',
            computers:'dell,lenovo,hp',
            labelId:3,
            isReView:1,
            isButtonDisabled: true,
            labelClass:'label label-danger',
            rawHtml:'<p>my is p</p>',
            msg: '正常消息',
            testOnce: 'testOnce',
            groceryList: [
                { id: 0, text: '蔬菜' },
                { id: 1, text: '奶酪' },
                { id: 2, text: '随便其他什么人吃的东西' }
            ],
            message: '世界好！',
            title: '页面加载于：' + new Date(),
            show: true,
            citys: [
                { id: 1, cityName: '北京' },
                { id: 2, cityName: '上海' },
                { id: 3, cityName: '石家庄' },
                { id: 4, cityName: '香港' },
            ],
            userInput: '大家好！',
            learn_v_model: '学习vue',
        },
        methods: {
            reverseMessage: function () {
                this.userInput = this.userInput.split('').reverse().join('');
            },
            doSomeThing: function () {
                this.labelClass = 'label label-success';
            },
            onSubmit: function () {
                console.log('onSubmit');
            }
        },
        created: function () {
            //`this` 指向 app 实例
            console.log('data.message=' + this.message);
        },
        filters: {
            capitalize: function (value) {
                if (!value)
                    return '';
                value = value.toString();
                return value.charAt(0).toUpperCase() + value.slice(1);
            },
            addChar: function (value) {
                return value + '_addChar';
            }

        },
        computed: {
            addNumber: function (number) {
                return this.labelId + 1;
            }
        },
        components: {
            'my-component': Child
        }
    });

    


</script>
